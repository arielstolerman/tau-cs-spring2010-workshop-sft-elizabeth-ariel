% m - the output of WAVREAD.% creates a WAV file using the SFT with the given parameters on segments of size sizeOfInterval.% first runs SFT on each interval and then connects them all.% creates all partial WAV files and full connected WAV file.function[] = make_wav_from_sft_departed(isLogged,G,tau,m_A,m_B,numOfIterations,numOfRec,m,sizeOfInterval,name)numOfSegments = ceil(size(m,1)/sizeOfInterval);tmpSOI = sizeOfInterval;for i=1:numOfSegments	% adjust tmpSOI	if (i == numOfSegments)		tmpSOI = G - (numOfSegments-1)*tmpSOI;	end		low = (i-1)*tmpSOI+1;	high = i*tmpSOI;	partial_m = m(low:high,:);	func = @(x,G)wav_func_script(x,partial_m);		% run SFT on current part	[L,coeffs,sizes]=sft_dp_rec(isLogged,tmpSOI,tau,func,m_A,m_B,numOfIterations,numOfRec);		% write part to WAV	part_name = strcat(strcat(name,'_part_'),sprintf('%d',i));	make_wav_from_sft(L,coeffs,tmpSOI,part_name);endoutput_m = zeros(size(m,1),2);tmpSOI = sizeOfInterval;% connect all partsfor i=1:numOfSegments	% adjust tmpSOI	if (i == numOfSegments)		tmpSOI = G - (numOfSegments-1)*tmpSOI;	end		low = (i-1)*tmpSOI+1;	high = i*tmpSOI;	part_name = strcat(strcat(name,'_part_'),sprintf('%d',i));	output_m(low:high,1:2) = wavread(strcat(part_name,'.wav'));end% write to WAV filewavwrite(output_m,44100,16,strcat(name,'.wav'));